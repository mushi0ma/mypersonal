import logging
from telegram import Update
from telegram.ext import (
    ContextTypes,
    ConversationHandler,
    CallbackQueryHandler,
    MessageHandler,
    filters,
    CommandHandler,
)

from src.core.db import data_access as db_data
from src.core.db.utils import get_db_connection
from src.core import tasks
from src.admin_bot.states import AdminState

logger = logging.getLogger(__name__)

async def start_broadcast(update: Update, context: ContextTypes.DEFAULT_TYPE) -> AdminState:
    """–ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏."""
    await update.message.reply_text("üì¢ **–†–∞—Å—Å—ã–ª–∫–∞**\n\n–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–ª—É—á–∞—Ç –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏. –î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel.")
    return AdminState.BROADCAST_MESSAGE

async def process_broadcast(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏ —Å—Ç–∞–≤–∏—Ç –≤ –æ—á–µ—Ä–µ–¥—å –∑–∞–¥–∞—á–∏ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É."""
    message_text = update.message.text
    await update.message.reply_text("‚è≥ –ù–∞—á–∏–Ω–∞—é —Ä–∞—Å—Å—ã–ª–∫—É...")
    try:
        async with get_db_connection() as conn:
            user_db_ids = await db_data.get_all_user_ids(conn)

        for user_id in user_db_ids:
            tasks.notify_user.delay(user_id=user_id, text=message_text, category='broadcast')

        await update.message.reply_text(f"‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞ –¥–ª—è {len(user_db_ids)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
        tasks.notify_admin.delay(text=f"üì¢ –ê–¥–º–∏–Ω –∑–∞–ø—É—Å—Ç–∏–ª —Ä–∞—Å—Å—ã–ª–∫—É –¥–ª—è {len(user_db_ids)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.", category='admin_action')
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ä–∞—Å—Å—ã–ª–∫–∏: {e}")
    return ConversationHandler.END

async def cancel_broadcast(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω—è–µ—Ç –¥–∏–∞–ª–æ–≥ —Ä–∞—Å—Å—ã–ª–∫–∏."""
    await update.message.reply_text("üëå –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    return ConversationHandler.END

broadcast_handler = ConversationHandler(
    entry_points=[CommandHandler("broadcast", start_broadcast)],
    states={
        AdminState.BROADCAST_MESSAGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, process_broadcast)],
    },
    fallbacks=[CommandHandler("cancel", cancel_broadcast)],
)