from telegram import InlineKeyboardButton, InlineKeyboardMarkup

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ ---

def get_stats_panel_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–∞–Ω–µ–ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–æ–π –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ü–µ–Ω–æ–∫."""
    keyboard = [
        [InlineKeyboardButton("üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data="users_list_page_0")],
        [InlineKeyboardButton("‚≠ê –ò—Å—Ç–æ—Ä–∏—è –æ—Ü–µ–Ω–æ–∫", callback_data="ratings_page_0")]
    ]
    return InlineKeyboardMarkup(keyboard)


def get_users_list_keyboard(users: list, total_users: int, page: int, users_per_page: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
    keyboard = [[InlineKeyboardButton(f"üë§ {user['username']} ({user['full_name']})", callback_data=f"admin_view_user_{user['id']}")] for user in users]

    nav_buttons = []
    if page > 0:
        nav_buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"users_list_page_{page - 1}"))
    if (page + 1) * users_per_page < total_users:
        nav_buttons.append(InlineKeyboardButton("–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"users_list_page_{page + 1}"))
    if nav_buttons:
        keyboard.append(nav_buttons)

    keyboard.append([InlineKeyboardButton("üìä –ù–∞–∑–∞–¥ –∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ", callback_data="back_to_stats_panel")])
    return InlineKeyboardMarkup(keyboard)

def get_user_profile_keyboard(user_id: int, current_page: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    keyboard = [
        [InlineKeyboardButton("üìú –ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π", callback_data=f"admin_activity_{user_id}_0")],
        [InlineKeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data=f"admin_delete_user_{user_id}")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data=f"users_list_page_{current_page}")]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_user_delete_confirmation_keyboard(user_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    keyboard = [
        [InlineKeyboardButton("‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"admin_confirm_delete_{user_id}")],
        [InlineKeyboardButton("‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∞", callback_data=f"admin_view_user_{user_id}")]
    ]
    return InlineKeyboardMarkup(keyboard)

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∞–º–∏ ---

def get_books_list_keyboard(books: list, total_books: int, page: int, books_per_page: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥."""
    keyboard = [
        [InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –æ–¥–Ω—É –∫–Ω–∏–≥—É", callback_data="admin_add_book_start")],
        [InlineKeyboardButton("üì• –ú–∞—Å—Å–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç (CSV)", callback_data="admin_bulk_add_books")]
    ]
    
    for book in books:
        status_icon = "üî¥" if book.get('is_borrowed', False) else "üü¢"
        button_text = f"{status_icon} {book['name']}"
        keyboard.append([InlineKeyboardButton(button_text, callback_data=f"admin_view_book_{book['id']}")])

    nav_buttons = []
    if page > 0:
        nav_buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"books_page_{page - 1}"))
    if (page + 1) * books_per_page < total_books:
        nav_buttons.append(InlineKeyboardButton("–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"books_page_{page + 1}"))
    if nav_buttons:
        keyboard.append(nav_buttons)

    return InlineKeyboardMarkup(keyboard)

def get_book_details_keyboard(book_id: int, is_borrowed: bool, current_page: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–Ω–∏–≥–∏."""
    keyboard = [[InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"admin_edit_book_{book_id}")]]
    if not is_borrowed:
        keyboard.append([InlineKeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"admin_delete_book_{book_id}")])
    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∫–Ω–∏–≥", callback_data=f"books_page_{current_page}")])
    return InlineKeyboardMarkup(keyboard)

def get_book_edit_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–Ω–∏–≥–∏."""
    keyboard = [
        [InlineKeyboardButton("–ù–∞–∑–≤–∞–Ω–∏–µ", callback_data="edit_field_name")],
        [InlineKeyboardButton("–ê–≤—Ç–æ—Ä", callback_data="edit_field_author")],
        [InlineKeyboardButton("–ñ–∞–Ω—Ä", callback_data="edit_field_genre")],
        [InlineKeyboardButton("–û–ø–∏—Å–∞–Ω–∏–µ", callback_data="edit_field_description")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞", callback_data="cancel_edit")],
    ]
    return InlineKeyboardMarkup(keyboard)

def get_book_delete_confirmation_keyboard(book_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏."""
    keyboard = [
        [
            InlineKeyboardButton("‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"admin_confirm_book_delete_{book_id}"),
            InlineKeyboardButton("‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∞", callback_data=f"admin_view_book_{book_id}")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_add_book_confirmation_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∫–Ω–∏–≥–∏."""
    keyboard = [
        [InlineKeyboardButton("‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", callback_data="add_book_save_simple")],
        [InlineKeyboardButton("üöÄ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ —É–≤–µ–¥–æ–º–∏—Ç—å –≤—Å–µ—Ö", callback_data="add_book_save_notify")],
        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="add_book_cancel")]
    ]
    return InlineKeyboardMarkup(keyboard)