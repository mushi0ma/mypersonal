import asyncio
import logging
import multiprocessing

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º main-—Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∂–¥–æ–≥–æ –±–æ—Ç–∞ –æ–¥–∏–Ω —Ä–∞–∑
from src.library_bot.main import main as library_main
from src.admin_bot.main import main as admin_main
from src.notification_bot import main as notification_main
from src.audit_bot import main as audit_main

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def run_bot(main_func):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –≤ –Ω–æ–≤–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ."""
    asyncio.run(main_func())

if __name__ == "__main__":
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ—Ç–æ–¥ —Å—Ç–∞—Ä—Ç–∞ "spawn" –¥–ª—è —á–∏—Å—Ç–æ–≥–æ –∏ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    multiprocessing.set_start_method("spawn", force=True)

    logger.info("üåü –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –±–∏–±–ª–∏–æ—Ç–µ–∫–∏...")

    bots = {
        "Library Bot": library_main,
        "Admin Bot": admin_main,
        "Notification Bot": notification_main,
        "Audit Bot": audit_main,
    }

    processes = [
        multiprocessing.Process(target=run_bot, args=(main_func,), name=bot_name)
        for bot_name, main_func in bots.items()
    ]

    for process in processes:
        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ {process.name}...")
        process.start()

    try:
        # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        for process in processes:
            process.join()
    except KeyboardInterrupt:
        logger.info("‚õî –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        for process in processes:
            process.terminate()
            process.join()
        logger.info("‚úÖ –í—Å–µ –±–æ—Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")