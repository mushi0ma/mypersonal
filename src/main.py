import asyncio
import logging
from multiprocessing import Process

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def run_library_bot():
    """–ó–∞–ø—É—Å–∫ Library Bot –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ"""
    from src.library_bot.main import main
    import asyncio
    asyncio.run(main())

def run_admin_bot():
    """–ó–∞–ø—É—Å–∫ Admin Bot –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ"""
    from src.admin_bot.main import main
    import asyncio
    asyncio.run(main())

def run_notification_bot():
    """–ó–∞–ø—É—Å–∫ Notification Bot –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ"""
    from src.notification_bot import main
    import asyncio
    asyncio.run(main())

def run_audit_bot():
    """–ó–∞–ø—É—Å–∫ Audit Bot –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ"""
    from src.audit_bot import main
    import asyncio
    asyncio.run(main())

if __name__ == "__main__":
    logger.info("üåü –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –±–∏–±–ª–∏–æ—Ç–µ–∫–∏...")
    
    # –°–æ–∑–¥–∞—ë–º –ø—Ä–æ—Ü–µ—Å—Å—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–æ—Ç–∞
    processes = [
        Process(target=run_library_bot, name="Library Bot"),
        Process(target=run_admin_bot, name="Admin Bot"),
        Process(target=run_notification_bot, name="Notification Bot"),
        Process(target=run_audit_bot, name="Audit Bot"),
    ]
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    for process in processes:
        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ {process.name}...")
        process.start()
    
    # –ñ–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    try:
        for process in processes:
            process.join()
    except KeyboardInterrupt:
        logger.info("‚õî –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        for process in processes:
            process.terminate()
            process.join()
        logger.info("‚úÖ –í—Å–µ –±–æ—Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")