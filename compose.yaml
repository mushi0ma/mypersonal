x-common-app-config: &common-app-config
  build: .
  restart: always
  networks:
    - app-network
  volumes:
    - .:/app
    - ./backups:/backups
  environment:
    - PYTHONPATH=/app
    - TZ=Asia/Almaty
  env_file:
    - .env
  depends_on:
    db:
      condition: service_healthy
    redis:
      condition: service_started

services:
  db:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      TZ: Asia/Almaty
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:6-alpine
    restart: always
    environment:
      TZ: Asia/Almaty
    networks:
      - app-network

  bots:
    <<: *common-app-config
    command: python src/main.py

  celery_worker:
    <<: *common-app-config
    command: celery -A src.core.tasks.celery_app worker --loglevel=info

  celery_beat:
    <<: *common-app-config
    command: celery -A src.core.tasks.celery_app beat --loglevel=info

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: